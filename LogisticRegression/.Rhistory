bank<-read.csv(file.choose())
View(bank)
str(bank)
bank_1<-bank[,2:32]
str(bank_1)
str(bank)
bank_1<-bank[,2:32]
str(bank_1)
summary(bank_1)
str(bank)
bank_1<-bank[,2:32]
View(bank_1)
bank_1[,i]<-factor(x=bank_1[,i],levels=sort(unique(bank_1[,i])))
int i
for(i in c(1,3:9,11:21,23:31)){
datM_1[,i]<-factor(x=datM_1[,i],levels=sort(unique(datM_1[,i])))
}
for(i in c(1,3:9,11:21,23:31)){
bank_1[,i]<-factor(x=bank_1[,i],levels=sort(unique(bank_1[,i])))
}
View(bank_1)
View(bank)
bank_1$CHK_ACCT
View(bank_1)
set.seed(123)
random<-sample(x=c("Training1","Testing1"),size=nrow(bank_1),replace=T,prob = c(0.7,0.3))
random
Training<-bank_1[random=="Training1",]
View(Training)
Testing<-bank_1[random=="Testing1",]
View(Testing)
Training_model1<-glm(RESPONSE~.,data=Training1,family="binomial")
set.seed(123)
random<-sample(x=c("Training1","Testing1"),size=nrow(bank_1),replace=T,prob = c(0.7,0.3))
random
Training1<-bank_1[random=="Training1",]
View(Training1)
Testing1<-bank_1[random=="Testing1",]
View(Testing1)
Training_model1<-glm(RESPONSE~.,data=Training1,family="binomial")
summary(Training_model1)
Training_Model_11<-stepAIC(object=Training_model1)
library(MASS)
Training_Model_11<-stepAIC(object=Training_model1)
summary(Training_Model_11)
OddsRatio<-exp(coef(Training_Model_11))
OddsRatio
library(MKmisc)
HLgof.test(fit=Training_Model_11$fitted.values,obs=Training_Model_11$y,verbose=T)
Training_Model_1$fitted.values
Training_Model_11$fitted.values
library(pROC)
troc<-roc(response=Training_Model_1$y,predictor =Training_Model_1$fitted.values,plot=T)
troc$auc
troc<-roc(response=Training_Model_11$y,predictor =Training_Model_11$fitted.values,plot=T)
troc$auc
trpred<-ifelse(test=Training_Model_11$fitted.values<0.5,0,1)
table(Training_Model_11$y,trpred)
(108+449)/(108+99+49+449)
tspred<-predict.glm(object=Training_Model_11,newdata=Testing1,type="response")
troc1<-roc(response=Testing1$RESPONSE,predictor=tspred,plot=T)
troc1$auc
tspred1<-ifelse(test=tspred<0.5,0,1)
table(Testing1$RESPONSE,tspred1)
(46+171)/(46+47+31+171)
(29+199)/(32+29+37+199)
vif(OddsRatio)
library(car)
vif(OddsRatio)
OddsRatio<-exp(coef(Training_Model_11))
OddsRatio
library(car)
vif(OddsRatio)
library(car)
vif(Training_Model_11)
bank<-read.csv(file.choose())
View(bank)
str(bank)
bank_1<-bank[,2:32]
str(bank_1)
summary(bank_1)
for(i in c(1,3:9,11:21,23:31)){
bank_1[,i]<-factor(x=bank_1[,i],levels=sort(unique(bank_1[,i])))
}
View(bank_1)
set.seed(123)
random<-sample(x=c("Training1","Testing1"),size=nrow(bank_1),replace=T,prob = c(0.7,0.3))
random
Training1<-bank_1[random=="Training1",]
View(Training1)
Testing1<-bank_1[random=="Testing1",]
View(Testing1)
treereg=rpart(RESPONSE~.,data=Training1)
Training1<-bank_1[random=="Training1",]
treereg=rpart(RESPONSE~.,data=Training1)
library(rpart)
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
library(partykit)
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
cp=min(treereg$cptable[5,])
plot(as.party(treereg))
prune.treereg(treereg,cp=cp)
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$RESPONSE)
plot(as.party(prune.treereg))
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
Testing1<-bank_1[random=="Testing1",]
View(Testing1)
Testing1<-bank_1[random=="Testing1",]
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
rparty.test=predict(prune.treereg,newdata=Testing1,type=RESPONSE)
rparty.test=predict(prune.treereg,newdata=Testing1,type='RESPONSE')
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
rparty.test=predict(prune.treereg,newdata=Testing1)
table(rparty.test,Testing1$RESPONSE)
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1)
rparty.test$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type='RESPONSE')
rparty.test=predict(prune.treereg,newdata=Testing1,type='class')
table(rparty.test,Testing1$RESPONSE)
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
cp=min(treereg$cptable[7,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
cp=min(treereg$cptable[4,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
Testing1$RESPONSE
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
library(rpart)
library(partykit)
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
cp=min(treereg$cptable[4,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
library(rpart)
library(partykit)
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
cp=min(treereg$cptable[4,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
rparty.test=predict(prune.treereg,newdata=Testing1)
rparty.test
View(rparty.test)
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
bank<-read.csv(file.choose())
str(bank)
bank_1<-bank[,2:32]
str(bank_1)
summary(bank_1)
for(i in c(1,3:9,11:21,23:31)){
bank_1[,i]<-factor(x=bank_1[,i],levels=sort(unique(bank_1[,i])))
}
bank_1$CHK_ACCT
set.seed(123)
random<-sample(x=c("Training1","Testing1"),size=nrow(bank_1),replace=T,prob = c(0.7,0.3))
random
Training1<-bank_1[random=="Training1",]
Testing1<-bank_1[random=="Testing1",]
library(rpart)
library(partykit)
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
cp=min(treereg$cptable[4,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
rparty.test=predict(prune.treereg,newdata=Testing1,type="prob")
table(rparty.test,Testing1$RESPONSE)
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
rparty.test=predict(prune.treereg,newdata=Testing1,type="vector")
table(rparty.test,Testing1$RESPONSE)
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$RESPONSE)
rparty.test=predict(prune.treereg,newdata=Testing1,type="matrix")
table(rparty.test,Testing1$RESPONSE)
rparty.test=predict(prune.treereg,newdata=Testing1,type="vector")
table(rparty.test,Testing1$RESPONSE)
rparty.test=predict(prune.treereg,newdata=Testing1,type="prob")
rparty.test=predict(prune.treereg,newdata=Testing1,type="prob")
table(rparty.test,Testing1$RESPONSE)
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$RESPONSE)
cp=min(treereg$cptable[4,])
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
cp=min(treereg$cptable[5,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$RESPONSE)
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$class)
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$RESPONSE)
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
random<-sample(x=c("Training1","Testing1"),size=nrow(bank_1),replace=T,prob = c(0.8,0.2))
random
Training1<-bank_1[random=="Training1",]
View(Training1)
Testing1<-bank_1[random=="Testing1",]
View(Testing1)
Training1<-bank_1[random=="Training1",]
Testing1<-bank_1[random=="Testing1",]
library(rpart)
library(partykit)
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
cp=min(treereg$cptable[6,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type="RESPONSE")
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$RESPONSE)
plotcp(treereg)
cp=min(treereg$cptable[7,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$RESPONSE)
random<-sample(x=c("Training1","Testing1"),size=nrow(bank_1),replace=T,prob = c(0.7,0.3))
random
Training1<-bank_1[random=="Training1",]
Testing1<-bank_1[random=="Testing1",]
library(rpart)
library(partykit)
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
plotcp(treereg)
cp=min(treereg$cptable[6,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
cp=min(treereg$cptable[6,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$RESPONSE)
plot(as.party(prune.treereg))
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$RESPONSE)
Training1<-bank_1[random=="Training1",]
random<-sample(x=c("Training1","Testing1"),size=nrow(bank_1),replace=T,prob = c(0.7,0.3))
random
Training1<-bank_1[random=="Training1",]
Testing1<-bank_1[random=="Testing1",]
library(rpart)
library(partykit)
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
cp=min(treereg$cptable[3,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$RESPONSE)
bank<-read.csv(file.choose())
str(bank)
bank_1<-bank[,2:32]
str(bank_1)
summary(bank_1)
for(i in c(1,3:9,11:21,23:31)){
bank_1[,i]<-factor(x=bank_1[,i],levels=sort(unique(bank_1[,i])))
}
bank_1$CHK_ACCT
set.seed(123)
random<-sample(x=c("Training1","Testing1"),size=nrow(bank_1),replace=T,prob = c(0.7,0.3))
random
Training1<-bank_1[random=="Training1",]
View(Training1)
Testing1<-bank_1[random=="Testing1",]
library(rpart)
library(partykit)
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
plotcp(treereg)
cp=min(treereg$cptable[5,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$RESPONSE)
(41+180)/295
(46+171)/(46+47+31+171)
bank<-read.csv(file.choose())
str(bank)
bank_1<-bank[,2:32]
str(bank_1)
summary(bank_1)
for(i in c(1,3:9,11:21,23:31)){
bank_1[,i]<-factor(x=bank_1[,i],levels=sort(unique(bank_1[,i])))
}
bank_1$CHK_ACCT
set.seed(123)
random<-sample(x=c("Training1","Testing1"),size=nrow(bank_1),replace=T,prob = c(0.7,0.3))
random
Training1<-bank_1[random=="Training1",]
Testing1<-bank_1[random=="Testing1",]
library(rpart)
library(partykit)
treereg=rpart(RESPONSE~.,data=Training1)
print(treereg$cptable)
plotcp(treereg)
cp=min(treereg$cptable[5,])
plot(as.party(treereg))
prune.treereg=prune(treereg,cp=cp)
plot(as.party(prune.treereg))
Testing1$RESPONSE
rparty.test=predict(prune.treereg,newdata=Testing1,type="class")
table(rparty.test,Testing1$RESPONSE)
set.seed(123)
library(randomForest)
rfreg=randomForest(RESPONSE~.,data=Training1)
print(rfreg)
plot(rfreg)
which.min(rfreg$err.rate[,1])
rfreg2=randomforest(RESPONSE~.,data=Training1,ntree=353)
library(randomForest)
rfreg2=randomForest(RESPONSE~.,data=Training1,ntree=353)
print(rfreg2)
rfregtest=predict(rfreg,newdata=Testing1,type="response")
table(rfregtest,Testing$RESPONSE)
(37+11+56+191)
(37+191)/(37+11+56+191)
bank<-read.csv(file.choose())
View(bank)
str(bank)
bank_1<-bank[,2:32]
View(bank_1)
summary(bank_1)
for(i in c(1,3:9,11:21,23:31)){
bank_1[,i]<-factor(x=bank_1[,i],levels=sort(unique(bank_1[,i])))
}
View(bank_1)
bank_1$CHK_ACCT
set.seed(123)
random<-sample(x=c("Training1","Testing1"),size=nrow(bank_1),replace=T,prob = c(0.7,0.3))
random
Training1<-bank_1[random=="Training1",]
Testing1<-bank_1[random=="Testing1",]
Training_model1<-glm(RESPONSE~.,data=Training1,family="binomial")
summary(Training_model1)
Training_Model_11<-stepAIC(object=Training_model1)
Training_Model_11<-stepAIC(object=Training_model1)
OddsRatio<-exp(coef(Training_Model_11))
OddsRatio
library(car)
install.packages("car")
library(car)
install.packages("lme4")
install.packages("nloptr")
install.packages("car")
library(car)
install.packages("MKmisc")
library(MKmisc)
library(pROC)
troc<-roc(response=Training_Model_11$y,predictor =Training_Model_11$fitted.values,plot=T)
library(MASS)
Training_Model_11<-stepAIC(object=Training_model1)
OddsRatio<-exp(coef(Training_Model_11))
OddsRatio
library(car)
